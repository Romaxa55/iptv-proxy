project_name: iptv-proxy
release:
  github:
    owner: romaxa55
    name: iptv-proxy
  name_template: '{{.Tag}}'
builds:
  - id: iptv-proxy
    goos:
      - windows
      - darwin
      - linux
    goarch:
      - amd64
      - arm64
    goarm:
      - "6"
    gomips:
      - hardfloat
    goamd64:
      - v1
    targets:
      - windows_amd64_v1
      - windows_arm64
      - darwin_amd64_v1
      - darwin_arm64
      - linux_amd64_v1
      - linux_arm64
    dir: .
    main: .
    binary: iptv-proxy
    builder: go
    gobinary: go
    command: build
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser
    flags:
      - -m=vendor
      - -a
    env:
      - CGO_ENABLED=0
      - GO111MODULE=on
archives:
  - id: default
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - src: license*
      - src: LICENSE*
      - src: readme*
      - src: README*
      - src: changelog*
      - src: CHANGELOG*
nfpms:
  - file_name_template: '{{ .PackageName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ with .Arm }}v{{ . }}{{ end }}{{ with .Mips }}_{{ . }}{{ end }}{{ if not (eq .Amd64 "v1") }}{{ .Amd64 }}{{ end }}'
    package_name: iptv-proxy
    id: default
    formats:
      - deb
      - rpm
    vendor: Pierre-Emmanuel Jacquier
    homepage: https://github.com/romaxa55/iptv-proxy
    maintainer: Pierre-Emmanuel <pierre-emmanuel.jacquier@epitech.eu>
    description: Reverse proxy on iptv m3u file
    license: Apache 2.0
    bindir: /usr/bin
snapshot:
  name_template: '{{ .Version }}-SNAPSHOT-{{ .ShortCommit }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
  algorithm: sha256
dockers:
  - ids:
      - iptv-proxy
    goos: linux
    goarch: arm64
    goarm: "6"
    goamd64: v1
    dockerfile: .Dockerfile.goreleaser
    image_templates:
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:{{ .Tag }}-arm64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:v{{ .Major }}-arm64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:v{{ .Major }}.{{ .Minor }}-arm64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:latest-arm64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:{{ .Tag }}-arm64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:v{{ .Major }}-arm64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:v{{ .Major }}.{{ .Minor }}-arm64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:latest-arm64
    skip_push: "false"
    build_flag_templates:
      - --platform=linux/arm64/v8
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
    use: buildx
  - ids:
      - iptv-proxy
    goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: .Dockerfile.goreleaser
    image_templates:
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:{{ .Tag }}-amd64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:v{{ .Major }}-amd64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:v{{ .Major }}.{{ .Minor }}-amd64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:latest-amd64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:{{ .Tag }}
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:v{{ .Major }}
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:v{{ .Major }}.{{ .Minor }}
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:latest
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:{{ .Tag }}-amd64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:v{{ .Major }}-amd64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:v{{ .Major }}.{{ .Minor }}-amd64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:latest-amd64
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:{{ .Tag }}
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:v{{ .Major }}
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:v{{ .Major }}.{{ .Minor }}
      - ghcr.io/romaxa55/iptv-proxy/iptv-proxy:latest
    skip_push: "false"
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
    use: buildx
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ .ProjectName }} {{ mdv2escape .Tag }} is out! Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
